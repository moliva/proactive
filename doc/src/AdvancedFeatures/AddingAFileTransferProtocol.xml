<?xml version="1.0" encoding="utf-8"?><chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="AddingAFileTransferProtocol"><info><title xml:id="HowtoaddanewFileTransferCopyProtocol_33">How to add a new FileTransfer CopyProtocol</title></info>
<!--  File: /home/irosenbe/PA_new_doc/docbook-tuto/development/FileTransfer.html  -->

	<para>
		FileTransfer protocols can be of two types: <emphasis role="bold">external</emphasis> or <emphasis role="bold">internal</emphasis>.
		Examples of external protocols are <emphasis role="bold">scp</emphasis> and <emphasis role="bold">rcp</emphasis> whereas those
		of internal protocols are <emphasis role="bold">Unicore</emphasis> and <emphasis role="bold">Globus</emphasis>.
	</para>
	<para>
		Usually external FileTransfer happens before the deployment of the process. On the other hand,
		internal FileTransfer happens at the same time of the process deployment since the specific
		tools provided by the process are used. This implies that internal FileTransfer protocols cannot
		be used with other process, but the opposite is valid.
	</para>

	<section xml:id="AddingexternalFileTransferCopyProtocol"><info><title>Adding external FileTransfer CopyProtocol</title></info>

		<para>To add a new external FileTransfer CopyProtocol, follow the steps hereafter:</para>
		<itemizedlist>
			<listitem>
				<para>
					<emphasis role="bold">Implement the protocol class</emphasis>.
					This is done inside the package: <emphasis role="bold">org.objectweb.proactive.core.process.filetransfer;</emphasis>
					by extending the abstract class <emphasis role="bold">AbstractCopyProtocol</emphasis>.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Add the name of the protocol:</emphasis>.
					This is done by adding its name in the <emphasis role="bold">ALLOWED_COPY_PROTOCOLS[]</emphasis> array of the <emphasis role="bold">FileTransferWorkshop</emphasis> class.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Add the instantiation of the protocol class in the <literal>copyProtocolFactory(String name)</literal> method of <literal>FileTransferWorkshop</literal></emphasis>
				</para>
			</listitem>
		</itemizedlist>
		<warning>
			<para>
				Choosing the correct name for the protocol is simple, but must be done carefully.
				All names already in the array ALLOWED_COPY_PROTOCOLS are forbidden. This includes the name <emphasis role="bold">'processDefault'</emphasis>, which is also forbidden.
				Some times, <emphasis role="bold">'processDefault'</emphasis> will correspond to an external FileTransfer protocol (e.g. ssh
				with scp), and some other times, it will correspond to an internal protocol.
			</para>
		</warning>
	</section>

	<section xml:id="AddinginternalFileTransferCopyProtocol"><info><title>Adding internal FileTransfer CopyProtocol</title></info>
		<para>To add a new internal FileTransfer CopyProtocol, follow the steps hereafter:</para>
		<itemizedlist>
			<listitem>
				<para>
					<emphasis role="bold">Implement the method <literal>protected boolean
					internalFileTransferDefaultProtocol()</literal> inside the process class</emphasis>. Note that this method will
					be called if the <emphasis role="bold">processDefault</emphasis> keyword is specified in the <emphasis role="bold">XML Descriptor Process
					Section</emphasis>. Therefore, this method usually must return true, so no other FileTransfer
					protocols will be tried.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis role="bold">Add the name of the protocol:</emphasis>.
					This is done by adding its name in the <emphasis role="bold">ALLOWED_COPY_PROTOCOLS[]</emphasis> array of the <emphasis role="bold">FileTransferWorkshop</emphasis> class.
				</para>
			</listitem>
		</itemizedlist>
		<note>
			<para>
				When adding an internal FileTransfer protocol, <emphasis role="bold">nothing</emphasis> must be modified or
				added to the <emphasis role="bold">copyProtocolFactory(){}</emphasis> method.
			</para>
		</note>
	</section>
</chapter>
