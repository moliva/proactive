<?xml version="1.0" encoding="utf-8"?><chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="GuidedTour"><info><title xml:id="IntroductionToTheGuidedTourandTutorial_9">Introduction</title></info>

	<indexterm>
		<primary>Guided Tour</primary>
	</indexterm>


   <section xml:id="guidedOverview"><info><title xml:id="Overview_9">Overview</title></info>

      <para>This tour is a practical introduction to ProActive giving an
      illustrated introduction to some of the functionality and facilities
      offered by the library.</para>

      <para>We will introduce several features of the library through
      examples (see <xref linkend="GuidedTour"/>). If after
      reading this chapter you need further details on how the examples work, visit the
      <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://proactive.inria.fr/applications.htm">ProActive applications page</link>
      .</para>

      <para>
      <xref linkend="ActiveObjectTutorial"/> will provide you with practical
      experiences on how to program using ProActive by showing how to write your own client-server
      monitoring agent with active objects.
      This chapter will show different basic features of
      ProActive through examples that increase in complexity.
      </para>

      <para>The second part of the tutorial will point out how to
      program using the ProActive high level APIs. It will
      introduce the MasterWorker API, programming with components
      and the ProActive Scheduler.</para>

   </section>

   <section xml:id="guidedInstallation"><info><title xml:id="Installationandsetup_9">Installation and setup</title></info>

      <para>To get started, please follow instructions for downloading and installing ProActive (see
      <xref linkend="Installation"/>).</para>

      <para>Example applications in <xref linkend="GuidedTour"/> can
      be run by going to <literal>ProActive/examples/</literal> directory
      and starting the corresponding script.
      You do not need to set up any environment variables as these are set up automatically by the
      scripts. The scripts are platform dependant: use the <literal>.sh</literal> files
      on Unix/Linux and the <literal>.bat</literal> files on
      Windows.</para>

      <para>For programming examples, you will need to use a policy file, such as <literal>
      ProActive/examples/proactive.java.policy</literal>, with the JVM option
      <literal>-Djava.security.policy=/filelocation/proactive.java.policy</literal>.
      You will also need a log4j configuration file. An example file you can use is
      <literal>ProActive/examples/proactive-log4j</literal>.
      The JVM option for the log4j configuration file is
      <literal>-Dlog4j.configuration=file:/filelocation/proactive-log4j</literal>.</para>

   </section>

   <section xml:id="ProActiveandIDEsEclipse_9"><info><title>ProActive and IDEs (Eclipse, ...)</title></info>

		<indexterm>
			<primary>Eclipse</primary>
		</indexterm>
		<indexterm>
			<primary>IDE</primary>
		</indexterm>

      <para>We recommend you to use the Eclipse IDE to develop your ProActive
      applications. You can get this tool on the <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.eclipse.org">Eclipse website</link>. Just unzip and launch
      the eclipse executable. In order to develop your own ProActive
      application, you will need to create an Eclipse project:</para>

      <para><emphasis role="bold">File -&gt; New ... -&gt;
      Project</emphasis></para>

      <para>Then, choose <emphasis role="bold">Java Project</emphasis>. A wizard
      will appear and ask you to enter the project name:</para>

      <informalfigure>
         <mediaobject>
            <imageobject>
               <imagedata scalefit="1" width="100%" contentdepth="100%" fileref="images/png/eclipse_files/wizard_new_project.png" format="PNG"/>
            </imageobject>
         </mediaobject>
      </informalfigure>

      <para>In order to separate class files from source files (it can be useful
      if you write scripts which refer to these classes), you can check the
      <emphasis role="bold">Create separate source and output folders</emphasis>
      in the <emphasis role="bold">Project Layout</emphasis> Frame, and click on
      <emphasis role="bold">Configure Default...</emphasis> to choose the
      folders names. Once you are done with page,
      click on <emphasis role="bold">Next</emphasis>.</para>

      <para>You have to specify some Java settings in order to set the
      application classpath. Select the <emphasis role="bold">Libraries</emphasis> tab and click on the <emphasis role="bold">Add External Jar...</emphasis> button. Add the ProActive.jar
      and the libraries contained in the ProActive/dist/lib/ directory of the ProActive
      distribution.</para>

      <para>The <emphasis role="bold">Libraries</emphasis> tab should look like
      this:</para>

      <informalfigure>
         <mediaobject>
            <imageobject>
               <imagedata scalefit="1" width="100%" contentdepth="100%" fileref="images/png/eclipse_files/wizard_java_settings.png" format="PNG"/>
            </imageobject>
         </mediaobject>
      </informalfigure>

      <para>You can now see on the navigator tab on the left side that there is
      a new Project with the source and output folders you have just created:</para>

      <informalfigure>
         <mediaobject>
            <imageobject>
               <imagedata scalefit="1" width="100%" contentdepth="100%" fileref="images/png/eclipse_files/navigator.png" format="PNG"/>
            </imageobject>
         </mediaobject>
      </informalfigure>

      <para>You are now able to create classes and packages that use the
      ProActive library.</para>

      <para>Everything is now configured to create your ProActive application. Click on
      the <emphasis role="bold">Finish</emphasis> button to terminate.</para>

      <para>We have developed an Eclipse application that will help
      developers to easily monitor ProActive applications. To learn how to monitor ProActive applications read the
      ProActive IC2D documentation.</para>
   </section>
</chapter>
