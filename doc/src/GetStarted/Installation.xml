<?xml version="1.0" encoding="utf-8"?>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="Installation"><info><title xml:id="ProActiveInstallation_75">ProActive Installation</title></info>

	<indexterm>
		<primary>Installation</primary>
	</indexterm>
   <para>
   ProActive is available for <link xlink:href="http://www.activeeon.com/community-downloads">download</link> under
   the <link xlink:href="http://www.gnu.org/licenses/agpl-3.0.txt">AGPL 3</link>
   license. ProActive requires <link xlink:href="http://java.sun.com/j2se/1.5/">JDK 1.5</link> or later to be installed
   on your computer. Please note that ProActive will NOT run with any
   version prior to 1.5 since some features introduced in JDK 1.5 are essential.
   </para>

   <section xml:id="ProActiveInstallationOverview_75"><info><title>ProActive Installation Overview</title></info>

      <section xml:id="TestingProActiveWithTheExamples_75"><info><title>Testing ProActive With Examples</title></info>

         <itemizedlist>
            <listitem>
               <para> Download and expand the ProActive archive</para>
            </listitem>

            <listitem>
               <para>Set the <literal>JAVA_HOME</literal> variable to the Java distribution you want to use</para>
            </listitem>

            <listitem>
               <para>If you have already a <literal>PROACTIVE_HOME</literal> and/or a <literal>PROACTIVE</literal> variable set, then unset them or set them to your new ProActive home.
               If you do not do that, scripts will try to use them.</para>
            </listitem>

            <listitem>
               <para>Launch the scripts located in the <literal>ProActive/examples</literal> directory.</para>
            </listitem>
         </itemizedlist>

      </section>

      <section xml:id="DevelopingWithProActive_75"><info><title>Developing With ProActive</title></info>

         <itemizedlist>
            <listitem>
               <para>Download and unzip the ProActive archive</para>
            </listitem>

            <listitem>
               <para>Normally, sources have already been compiled. If not, please go to the <literal>compile</literal> directory and type <literal>build[.bat] deploy.all</literal> (build script has to be executable.
               If not, type <literal>chmod 744 build</literal>). To see all the possible targets, just type <literal>build[.bat]</literal>.</para>
            </listitem>

            <listitem>
               <para>Include in your <literal>CLASSPATH</literal> the
               ProActive jar file <literal>ProActive/dist/lib/ProActive.jar</literal>.
               Normally, only this JAR file is needed. However, it defined some required other JAR files as indexes such as
               <literal>ProActive/dist/lib/javassist.jar</literal>,
               <literal>ProActive/dist/lib/log4j.jar</literal>,
               <literal>ProActive/dist/lib/xercesImpl.jar</literal>,
               <literal>ProActive/dist/lib/fractal.jar</literal>,
               <literal>ProActive/dist/lib/asm-2.2.3.jar</literal>,
               <literal>ProActive/dist/lib/ibis-1.4.jar</literal>,
               <literal>ProActive/dist/lib/bouncycastle.jar</literal>,
			   <literal>ProActive/dist/lib/servlet-api.jar</literal>,
			   <literal>ProActive/dist/lib/jetty-*.jar</literal> and
			   <literal>ProActive/dist/lib/virtualization-core.jar</literal>.
               Thus, theses files have to be placed into the same directory as ProActive.jar.
               It is a piece of information to keep in mind in particular if you want to move ProActive.jar toward your own lib
               directory. In this case, you have also to move the 7 others JAR files.</para>
            </listitem>

            <listitem>
               <para>Depending on your project needs, you might need to include other libraries
               located in the <literal>ProActive/dist/lib</literal> directory.</para>
            </listitem>

            <listitem>
               <para>Launch the JVM with a <link xlink:href="http://java.sun.com/j2se/1.5/docs/guide/security/permissions.html"> security policy
               file</link> using the option
               <literal> -Djava.security.policy=pathToFile</literal>. A basic policy file
               can be found at <literal>ProActive/examples/proactive.java.policy</literal>. You can also specify a
               <link xlink:href="http://logging.apache.org/log4j/1.2/manual.html">log4j configuration
               file</link> with the property <literal>-Dlog4j.configuration=file:pathToFile</literal>.
               If a configuration file is not specified a default logger that logs on the console will be created.</para>
            </listitem>
         </itemizedlist>

         <para>The next sections details these different steps to install ProActive.</para>

      </section>

   </section>

   <section xml:id="ProActiveDetailedInstallationSteps_75"><info><title>ProActive Detailed Installation Steps</title></info>

	<indexterm>
		<primary>Installation</primary>
		<secondary>Steps</secondary>
	</indexterm>
      <section xml:id="DownloadAndExpandTheArchive_75"><info><title>Download And Expand The ProActive Archive</title></info>
		<indexterm>
			<primary>Installation</primary>
			<secondary>Download</secondary>
		</indexterm>

         <para>
         You can download the archive file (a zip or a tar.gz file) containing
         ProActive from the <link xlink:href="http://www.activeeon.com/community-downloads">
         download section </link> of the ProActive home page. You will be asked to accept
         the license agreement and provide a few details including your email address.
         You will be then redirected towards the download page.
         </para>
         <para>
         Unzip this archive using your favorite program for uncompressing, such as
         <link xlink:href="http://www.7-zip.org/">7Zip</link> under Windows or
         the <link xlink:href="http://www.info-zip.org/pub/infozip/"> unzip </link> and
         <link xlink:href="http://unixhelp.ed.ac.uk/CGI/man-cgi?tar"> tar </link>
         command-line utilities under most Linux/Unix systems.
         Uncompressing archive creates a ProActive directory and all the files contained in
         this archive go into this directory and its subdirectories. As already said, ProActive
         should be compiled. If it is not the case, you have to compile it using
         the <literal>build[.bat] deploy.all</literal> in the compile directory.
         </para>


         <para>Here is a quick overview of the directory structure of the archive:</para>


         <table>
            <title xml:id="ProActivezipcontents_75">ProActive archive contents</title>
            <tgroup cols="2">
               <colspec colname="c1" colwidth="35*"/>
               <colspec colname="c2" colwidth="65*"/>

               <tbody>
                  <row>
                     <entry><para><emphasis role="bold">Directory or File</emphasis></para></entry>
                     <entry><para><emphasis role="bold">Description</emphasis></para></entry>
                  </row>

                  <row>
                     <entry><para><emphasis role="bold"><literal>dist/lib/ProActive.jar</literal></emphasis></para></entry>
                     <entry><para>ProActive bytecode that you need to include in your
                     <literal>CLASSPATH</literal> in order to use ProActive</para></entry>
                  </row>

                  <row>
                     <entry><para><emphasis role="bold"><literal>dist/lib/ProActive_examples.jar</literal></emphasis></para></entry>
                     <entry><para>Bytecode and resources of all examples included with ProActive.
                     This jar file needs to be included in your <literal>CLASSPATH</literal> only when trying
                     to run examples. All examples rely on ProActive and therefore the <literal>ProActive.jar</literal>
                     file must be included in the <literal>CLASSPATH</literal> as well. This is done automatically by
                     the scripts (<literal>env.sh</literal> on Linux/Unix and <literal>init.bat</literal> on Windows) driving the examples. The source code is also included in the
                     <literal>src</literal> directory (see below)</para></entry>
                  </row>

                  <row>
                     <entry><para><emphasis role="bold"><literal>lib</literal></emphasis></para></entry>
                     <entry><para>External libraries used by
                     ProActive</para></entry>
                  </row>

                  <row>
                     <entry><para><emphasis role="bold"><literal>doc/built/ProActive</literal></emphasis></para></entry>
                     <entry><para>ProActive documentation including a HTML version, a PDF version, the API JavaDoc...
                     If this directory does not exist, please go to the <literal>ProActive/compile</literal> directory and
                     run <literal>build doc.ProActive.docs</literal>. This command will create all the ProActive documentation
                     versions. If you just want a specific version of documentation, run <literal>build</literal> to see all the
                     target possibilities and choose the most appropriate one.
                     </para></entry>
                  </row>

                  <row>
                     <entry><para><emphasis role="bold"><literal>examples</literal></emphasis></para></entry>
                     <entry><para>Unix sh scripts and Windows bat files for running examples</para></entry>
                     </row>

                     <row>
                        <entry><para><emphasis role="bold"><literal>src</literal></emphasis></para></entry>
                        <entry><para>The full source code of
                        ProActive</para></entry>
                     </row>

                     <row>
                        <entry><para><emphasis role="bold"><literal>compile</literal></emphasis></para></entry>
                        <entry><para>Scripts to compile
                        ProActive using Ant.</para></entry>
                     </row>
               </tbody>
            </tgroup>
         </table>
      </section>

      <section xml:id="SettheliteralCLASSPATHliteralforusingProActive_75"><info><title>Set the <literal>CLASSPATH</literal> for using ProActive to write applications</title></info>

         <indexterm significance="preferred">
            <primary>CLASSPATH</primary>
            <secondary>Libraries</secondary>
         </indexterm>

         <para>
         In order to use ProActive to write your own
         application, you need to place the <literal>dist/lib/ProActive.jar</literal> file in your <literal>CLASSPATH</literal>.
         As said previously, it makes references to other JAR files which have to be in the same directory as ProActive.jar.
         If it not the case, you have to include the following JAR files to your <literal>CLASSPATH</literal>:
         </para>

         <itemizedlist>
            <listitem>
               <para><literal>dist/lib/javassist.jar</literal> - used to handle bytecode manipulation.</para>
            </listitem>

            <listitem>
               <para><literal>dist/lib/log4j.jar</literal> - <link xlink:href="http://logging.apache.org/log4j/1.2/manual.html">logging</link>
               mechanism used by ProActive.</para>
            </listitem>

            <listitem>
               <para><literal>dist/lib/xercesImpl.jar</literal>
               - used to parse and validate XML
               files, like deployment descriptors, configuration files and component
               files (see "XML_Descriptors", "Configuration" and "intro").</para>
            </listitem>

            <listitem>
               <para><literal>dist/lib/fractal.jar</literal>
               - component model used for ProActive Components (see
               "configuration_html_Controllers_and_interceptors_n").</para>
            </listitem>

            <listitem>
               <para><literal>dist/lib/bouncycastle.jar</literal> - used by the ProActive security framework (see "Security").</para>
            </listitem>

            <listitem>
               <para><literal>dist/lib/ibis-1.4.jar</literal> - communication library used by the ProActive components.</para>
            </listitem>

            <listitem>
               <para><literal>dist/lib/asm-2.2.3.jar</literal> - used by the ProActive components for bytecode manipulations.</para>
            </listitem>
			<listitem>
				<para>
					<literal>dist/lib/servlet-api.jar</literal> and <literal>dist/lib/jetty-*.jar</literal> - used for dynamic class loading through the embedded Jetty server.
				</para>
			</listitem>
			<listitem>
				<para>
					<literal>dist/lib/virtualization-core.jar</literal> - used by ProActive deployments on virtual infrastructures.
				</para>
			</listitem>
         </itemizedlist>

         <note><para>You do not need to modify your <literal>CLASSPATH</literal> permanently if you
         include the entries above using a Java IDE or a shell script.</para> </note>

         <para>Under Linux/Unix:</para>

         <para>
         Open a  Linux/Unix terminal and go to your ProActive directory using the <literal>cd</literal> command.
         Then, set the <literal>CLASSPATH</literal> as follows:
         </para>

         <programlisting language="sh"><textobject><textdata fileref="code_snippets/installation/class_path_linux.txt"/></textobject></programlisting>

         <para>Under Windows:</para>
         <para> Open a Windows command terminal by executing either <literal>cmd</literal> or
         <literal>command</literal> in <emphasis>Start-&gt; Run</emphasis> </para>
         <para>
         Go to the ProActive installation folder by using  <literal>cd</literal> and
         set the <literal>CLASSPATH</literal> by executing the following commands:
         </para>

         <programlisting language="sh"><textobject><textdata fileref="code_snippets/installation/class_path_windows.txt"/></textobject></programlisting>

         <note><para>Keep in mind that some JAR files are needed by ProActive.jar and so, they have to be in the same directory. If not, add them to the <literal>CLASSPATH</literal>.</para></note>

         <para>In addition to the jar files above, you may want to add the following
         jar files. None of them are used directly by the core functionalities of
         ProActive but only in part of the library. They are not needed at runtime if those specific
         functionalities are not used but they are needed to compile all
         the code.</para>

         <itemizedlist>
            <listitem>
               <para><literal>trilead-ssh2.jar</literal> - used when tunneling with rmissh.</para>
            </listitem>

            <listitem>
               <para><literal>cryptix.jar, cog-jglobus-1.2.jar, puretls.jar, cryptix32.jar, cryptix-asn1.jar, cog-ogce.jar, cog-jglobus.jar
               </literal> - used to interface with Globus</para>
            </listitem>

            <listitem>
               <para><literal>fractal.jar, fractal-adl.jar</literal> - used by the Fractal components</para>
            </listitem>

            <listitem>
               <para> <literal>Proactive/lib/cxf/*.jar</literal> - used by the Web Services features </para>
            </listitem>

            <listitem>
               <para><literal>bcel-5.1.jar, ibis-util-1.0.jar, colobus-0.1.jar,
               ibis-connect-1.0.jar, ibis-1.4.jar, bcel-5.1-fixes-1.0.jar</literal> - used by Ibis if
               configured as communication protocol</para>
            </listitem>

            <listitem>
               <para><literal>ajo.jar, njs_client.jar, scriptPlugin.jar, jh.jar</literal>
               - used when deploying to a UNICORE site.</para>
            </listitem>
         </itemizedlist>

         <para>
            The jar files can be found under <literal> Proactive/lib </literal> and under
            <literal> ProaActive/dist/lib</literal>.
         </para>
      </section>

         <section xml:id="Create_Java_Policy"><info><title>Create a <literal>proactive.java.policy</literal> File To Set
         Permissions</title></info>

		 <indexterm>
			 <primary>Java Policy File</primary>
			 <secondary>Simple example</secondary>
		 </indexterm>

         <para>See <link xlink:href="http://java.sun.com/j2se/1.5/docs/guide/security/permissions.html">Permissions
         in the JavaTM 2 SDK</link> to learn more about Java permissions. The
         option <literal>-Djava.security.policy=pathToFile</literal> will specify which security policy file to
         use within ProActive. As a first approximation, you can create a simple security
         policy file granting all permissions:</para>

         <programlisting language="sh"><textobject><textdata fileref="../../../examples/proactive.java.policy"/></textobject></programlisting>

         <note><para>
         If you use the scripts provided with the distribution to run
         examples, an existing policy file named
         <literal>proactive.java.policy</literal>
         will be used by default. It is exactly the same as described above.
         </para></note>
      </section>

      <section xml:id="Asimpleproactivelog4jfile_75"><info><title>A simple <literal>proactive-log4j</literal> file</title></info>

         <indexterm>
            <primary>Log4j</primary>
            <secondary>Simple example</secondary>
         </indexterm>

         <para>
            See  for logging using
            the <link xlink:href="http://logging.apache.org/log4j/1.2/index.html">Apache log4j</link>. The
            option <literal>-Dlog4j.configuration=file:pathToFile</literal> will specify which logging policy file to
            use within ProActive. As a first approximation, you can create a simple logging
            policy file:
         </para>

         <programlisting language="sh"><textobject><textdata fileref="../../../examples/proactive-log4j"/></textobject></programlisting>

         <note>
            <para>If you use the scripts provided with the distribution to run the
            examples, an existing log4j file named <literal>proactive-log4j</literal>
            will be used by default.</para>
         </note>
      </section>



      <section xml:id="RunAFewExamplesForTesting_75"><info><title>Run A Few Examples For Testing</title></info>

         <para>
            You can try to run the test applications provided with ProActive.
            Each example comes with a script to launch the application.
            This script is located in <literal> ProActive/examples </literal>.
            All the example code sources can be found in the directory <literal>ProActive/src/Examples/org/objectweb/proactive/examples/</literal>.
         </para>

         <section xml:id="ReaderWriter_75"><info><title>Reader/Writer</title></info>

            <para>This example is the ProActive version of the Readers/Writers
            canonical problem. To illustrate the ease-of-use of the ProActive model,
            different synchronization policies can be applied without even stopping the application. This example is based on a easy to use Swing
            GUI.
            </para>

            <itemizedlist>

               <listitem>
                  <para>script: <literal>readers.sh</literal> or
                  <literal>readers.bat</literal></para>
               </listitem>

               <listitem>
                  <para>source: <literal>examples/readers</literal></para>
               </listitem>

            </itemizedlist>
         </section>

         <section xml:id="TheDiningPhilosophers_75"><info><title>The Dining Philosophers</title></info>

            <para>This example is one possible implementation of the well-known Dining
            Philosophers synchronization problem. This
            example is based on a easy to use Swing GUI.</para>

            <itemizedlist>

               <listitem>
                  <para>script: <literal>philosophers.sh</literal> or
                  <literal>philosophers.bat</literal></para>
               </listitem>

               <listitem>
                  <para>source: <literal>examples/philosophers</literal></para>
               </listitem>

            </itemizedlist>
         </section>

         <section xml:id="TheNBodySimulation_75"><info><title>The N-Body Simulation</title></info>

            <para>This example can be used later on as a deployment example for
            several machines, and also for the fault-tolerance features.</para>

            <itemizedlist>
               <listitem>
                  <para>script: <literal>nbody.sh</literal> or
                  <literal>nbody.bat</literal></para>
               </listitem>

               <listitem>
                  <para>source: <literal>examples/nbody</literal></para>
               </listitem>
            </itemizedlist>
         </section>
      </section>
   </section>
</chapter>
