<?xml version="1.0" encoding="ISO-8859-1" ?>

<!-- A DTD that includes all the "standard" Fractal ADL modules -->

<!-- ********************************************************************** -->
<!--                          AST nodes definitions                         -->
<!-- ********************************************************************** -->

<?add ast="definition" itf="org.objectweb.fractal.adl.Definition" ?>

<!-- components module -->
<?add ast="component"  itf="org.objectweb.fractal.adl.components.Component" ?>
<?add ast="definition" itf="org.objectweb.fractal.adl.components.ComponentDefinition" ?>

<!-- interfaces module -->
<?add ast="interface"  itf="org.objectweb.fractal.adl.interfaces.Interface" ?>
<?add ast="definition" itf="org.objectweb.fractal.adl.interfaces.InterfaceContainer" ?>
<?add ast="component"  itf="org.objectweb.fractal.adl.interfaces.InterfaceContainer" ?>

<!-- types module -->
<!-- <?add ast="interface"  itf="org.objectweb.fractal.adl.types.TypeInterface" ?> -->
<?add ast="interface"  itf="org.objectweb.proactive.core.component.adl.types.PATypeInterface" ?>


<!-- bindings module -->
<?add ast="binding"    itf="org.objectweb.fractal.adl.bindings.Binding" ?>
<?add ast="definition" itf="org.objectweb.fractal.adl.bindings.BindingContainer" ?>
<?add ast="component"  itf="org.objectweb.fractal.adl.bindings.BindingContainer" ?>

<!-- attributes module -->
<?add ast="attribute"  itf="org.objectweb.fractal.adl.attributes.Attribute" ?>
<?add ast="attributes" itf="org.objectweb.fractal.adl.attributes.Attributes" ?>
<?add ast="definition" itf="org.objectweb.fractal.adl.attributes.AttributesContainer" ?>
<?add ast="component"  itf="org.objectweb.fractal.adl.attributes.AttributesContainer" ?>

<!-- implementations module -->
<?add ast="implementation" itf="org.objectweb.fractal.adl.implementations.Implementation" ?>
<?add ast="definition"     itf="org.objectweb.fractal.adl.implementations.ImplementationContainer" ?>
<?add ast="component"      itf="org.objectweb.fractal.adl.implementations.ImplementationContainer" ?>
<?add ast="controller"     itf="org.objectweb.fractal.adl.implementations.Controller" ?>
<?add ast="definition"     itf="org.objectweb.fractal.adl.implementations.ControllerContainer" ?>
<?add ast="component"      itf="org.objectweb.fractal.adl.implementations.ControllerContainer" ?>

<!-- loggers module -->
<?add ast="logger"     itf="org.objectweb.fractal.adl.loggers.Logger" ?>
<?add ast="definition" itf="org.objectweb.fractal.adl.loggers.LoggerContainer" ?>
<?add ast="component"  itf="org.objectweb.fractal.adl.loggers.LoggerContainer" ?>

<!-- nodes module -->
<?add ast="virtualNode" itf="org.objectweb.proactive.core.component.adl.nodes.VirtualNode" ?>
<?add ast="definition"  itf="org.objectweb.fractal.adl.nodes.VirtualNodeContainer" ?>
<?add ast="component"   itf="org.objectweb.fractal.adl.nodes.VirtualNodeContainer" ?>


<!-- arguments module -->
<?add ast="definition" itf="org.objectweb.fractal.adl.arguments.ArgumentDefinition" ?>

<!-- coordinates module -->
<?add ast="coordinates" itf="org.objectweb.fractal.adl.coordinates.Coordinates" ?>
<?add ast="definition"  itf="org.objectweb.fractal.adl.coordinates.CoordinatesContainer" ?>
<?add ast="component"   itf="org.objectweb.fractal.adl.coordinates.CoordinatesContainer" ?>

<!-- comments module -->
<?add ast="comment"        itf="org.objectweb.fractal.adl.comments.Comment" ?>
<?add ast="definition"     itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="component"      itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="interface"      itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="binding"        itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="attributes"     itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="attribute"      itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="controller"     itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="templateController" itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>
<?add ast="implementation" itf="org.objectweb.fractal.adl.comments.CommentContainer" ?>


<!-- exported virtual nodes module -->
<?add ast="exportedVirtualNodes"  itf="org.objectweb.proactive.core.component.adl.vnexportation.ExportedVirtualNodes" ?>
<?add ast="exportedVirtualNode"  itf="org.objectweb.proactive.core.component.adl.vnexportation.ExportedVirtualNode" ?>
<?add ast="composedFrom"  itf="org.objectweb.proactive.core.component.adl.vnexportation.ComposedFrom" ?>
<?add ast="composingVirtualNode"  itf="org.objectweb.proactive.core.component.adl.vnexportation.ComposingVirtualNode" ?>

<?add ast="definition" itf="org.objectweb.proactive.core.component.adl.vnexportation.ExportedVirtualNodesContainer" ?>
<?add ast="component" itf="org.objectweb.proactive.core.component.adl.vnexportation.ExportedVirtualNodesContainer" ?>
<?add ast="exportedVirtualNodes" itf="org.objectweb.proactive.core.component.adl.vnexportation.ExportedVirtualNodeContainer" ?>
<?add ast="exportedVirtualNode" itf="org.objectweb.proactive.core.component.adl.vnexportation.ComposedFromContainer" ?>
<?add ast="composedFrom" itf="org.objectweb.proactive.core.component.adl.vnexportation.ComposingVirtualNodeContainer" ?>


<?add ast="controller"     itf="org.objectweb.fractal.adl.components.ComponentContainer" ?>
<?add ast="controller"     itf="org.objectweb.fractal.adl.interfaces.InterfaceContainer" ?>
<?add ast="controller"     itf="org.objectweb.fractal.adl.bindings.BindingContainer" ?>


<!-- ********************************************************************** -->
<!--                   Mapping from XML names to AST names                  -->
<!-- ********************************************************************** -->

<?map xml="binding.client" ast="binding.from" ?>
<?map xml="binding.server" ast="binding.to" ?>

<?map xml="content" ast="implementation" ?>
<?map xml="content.class" ast="implementation.className" ?>

<?map xml="controller.desc" ast="controller.descriptor" ?>

<?map xml="virtual-node" ast="virtualNode" ?>

<!-- ********************************************************************** -->
<!--                          XML syntax definition                         -->
<!-- ********************************************************************** -->

<!ELEMENT definition (comment*,interface*,exportedVirtualNodes?, component*,binding*,content?,attributes?,controller?,logger?,virtual-node?,coordinates*) >
<!ATTLIST definition
  name CDATA #REQUIRED
  arguments CDATA #IMPLIED
  extends CDATA #IMPLIED
>

<!ELEMENT component (comment*,interface*,exportedVirtualNodes?, component*,binding*,content?,attributes?,controller?,logger?,virtual-node?,coordinates*) >
<!ATTLIST component
  name CDATA #REQUIRED
  definition CDATA #IMPLIED
>

<!ELEMENT interface (comment*) >
<!ATTLIST interface
  name CDATA #REQUIRED
  role (client | server | internal-client | internal-server ) #IMPLIED
  signature CDATA #IMPLIED
  contingency (mandatory | optional) #IMPLIED
  cardinality (singleton | collection | multicast | gathercast) #IMPLIED
  interceptors CDATA #IMPLIED
>

<!ELEMENT binding (comment*) >
<!ATTLIST binding
  client CDATA #REQUIRED
  server CDATA #REQUIRED
>

<!ELEMENT attributes (comment*,attribute*) >
<!ATTLIST attributes
  signature CDATA #IMPLIED
>

<!ELEMENT attribute (comment*) >
<!ATTLIST attribute
  name CDATA #REQUIRED
  value CDATA #REQUIRED
>

<!ELEMENT controller (comment*,interface*,component*,binding*) >
<!ATTLIST controller
  desc CDATA #IMPLIED
>

<!ELEMENT content (comment*) >
<!ATTLIST content
  class CDATA #REQUIRED
>

<!ELEMENT logger EMPTY >
<!ATTLIST logger 
  name CDATA #REQUIRED
>

<!ELEMENT virtual-node EMPTY >
<!ATTLIST virtual-node
  name CDATA #REQUIRED
  cardinality (single | multiple) "single"
>

<!ELEMENT coordinates (coordinates*) >
<!ATTLIST coordinates
  name  CDATA #REQUIRED
  x0    CDATA #REQUIRED
  x1    CDATA #REQUIRED
  y0    CDATA #REQUIRED
  y1    CDATA #REQUIRED
  color CDATA #IMPLIED
>

<!ELEMENT comment EMPTY >
<!ATTLIST comment
  language CDATA #IMPLIED
  text CDATA #IMPLIED
>

<!ELEMENT exportedVirtualNodes (exportedVirtualNode*) >


<!ELEMENT exportedVirtualNode (composedFrom) >
<!ATTLIST exportedVirtualNode
	name CDATA #REQUIRED
>

<!ELEMENT composedFrom (composingVirtualNode+) >

<!ELEMENT composingVirtualNode EMPTY>
<!ATTLIST composingVirtualNode
	component CDATA #REQUIRED
	name CDATA #REQUIRED
>

